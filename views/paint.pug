extends layouts/layout

block layout-content
  header
    h2=title

  section.paint
    .mosaic
      each column in JSON.parse(mosaic)
        .column
          each tile in column
            div(
              class='tile'
              id=`tile_${tile.coord_X}_${tile.coord_Y}`
              style=`background-color: ${tile.color}`
            )
    div.color
      label(for="color-picker") Choose a color :
      input(type="color" name="color" id="color-picker")

  script.
    let paint = !{mosaic}

    // Function to get specific tile of the mosaic
    const getTile = (x, y) => { 
      for (let i = 0; i < paint.length; i++) {
        for (let j = 0; j < paint[i].length; j++) {
          let tile = paint[i].find(t => t.coord_X === x && t.coord_Y === y)
          if (tile)
            return tile
        }
      }
    }

    // Socket.io for live updates of the mosaic
    socket.on('tiles', data => {
      let { type, tile } = data
      let element = document.getElementById(`tile_${tile.coord_X}_${tile.coord_Y}`)
      let currentTile = getTile(tile.coord_X, tile.coord_Y)
      if (type === 'CREATED')
        currentTile.id = tile.id
      currentTile.color = tile.color
      element.style.backgroundColor = tile.color
    })

    // Random color for ColorPicker onload (needless)
    const getRandomColor = () => {
      let letters = '0123456789ABCDEF'
      let color = '#'
      for (let i = 0; i < 6; i++) {
        color += letters[Math.floor(Math.random() * 16)]
      }
      return color
    }

    document.getElementById('color-picker').value = getRandomColor()

    // Event Click on div
    document.querySelectorAll('.tile').forEach(el => {
      el.addEventListener('click', () => {
          let x = parseInt(/\d+(?=_)/.exec(el.id)[0])
          let y = parseInt(/\d+$/.exec(el.id)[0])
          let tile = getTile(x, y)
          if (!tile.id) {
            setColor(x, y)
          } else {
            updateColor(tile.id)
          }
      })
    })

    // Create New Tile
    const setColor = (x, y) => {
      let color = document.getElementById('color-picker').value

      fetch('/api/tiles', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          ...loadAuthorizationHeader()
        },
        body: JSON.stringify({ color, x, y })
      }).then(res => {
        res.json().then(json => console.log(json))
      }).catch(err => console.log(err))
    }

    // Update New Tile
    const updateColor = id => {
      let color = document.getElementById('color-picker').value

      fetch(`/api/tiles/${id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          ...loadAuthorizationHeader()
        },
        body: JSON.stringify({ color })
      }).then(res => {
        res.json().then(json => console.log(json))
      }).catch(err => console.log(err))
    }
